version: '3.7'
services:        
  php56:
    build:
      context: .
      dockerfile: php56/Dockerfile
    container_name: mg_app56
    volumes:
      - ../code/php5:/code/php5.local
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      main:
        aliases:
          - php56

  php7:
    build:
      context: .
      dockerfile: php7/Dockerfile
    container_name: mg_app7
    volumes:
      - ../code/php7:/code/php7.local
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      main:
        aliases:
          - php7

  web:
    image: nginx:alpine
    ports:
      - "8080:80"
    container_name: mg_web
    volumes:
      - ../code/php7:/code/php7.local
      - ../code/php5:/code/php5.local
      - "./web/site.conf:/etc/nginx/conf.d/site.conf"
    depends_on:
      - php7    
      - php56
    networks:
      main:
        aliases:
          - php7.local

  db:
    image: mariadb:10.4.13
    container_name: mg_db
    restart: always
    command: --sql_mode="" --init-file /code/db/init.sql
    env_file: .env    
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - "8890:3306"
    volumes:
      - "./db/init.sql:/code/db/init.sql"
      - "./db/my.cnf:/etc/mysql/conf.d/my.cnf"
      - "./db/mysql:/var/lib/mysql"
      - "./db/tmp:/tmp/dbs"
    networks:
      main:
        aliases:
          - db

  memcached:
    image: memcached:1.6-alpine
    container_name: mg_memcached
    ports:
      - "11214:11211"
    networks:
      main:
        aliases:
          - memcached

  redis:
    image: redis:latest
    container_name: mg_redis
    ports:
      - "7002:6379"
    networks:
      main:
        aliases:
          - redis

  node:
    build:
      context: .
      dockerfile: node/Dockerfile
    container_name: mg_node
    volumes:
      - ../node_projects/node-project:/appnode-project
    working_dir: /app/node-project
    command: tail -f /dev/null
    ports:
      - "3000:3000"
      - "6006:6006"
    networks:
      - main

networks:
  main:
    driver: bridge

